
[project]
name = "speechllm"
version = "1.0.0"
description = ""
authors = [
    {name = "Robin Yuen Shing Hei", email = "robin.ysh@gmail.com"},
]
dependencies = [
    "icecream>=2.1.3",
    "tqdm>=4.66.1",
    "flake8>=6.1.0",
    "black>=23.12.1",
    "isort>=5.13.2",
    "autoflake>=2.2.1",
    "pylint>=3.0.3",
    "transformers>=4.36.2",
    "torch>=2.1.1",
    "torchaudio>=2.1.1",
    "tiktoken>=0.5.2",
    "matplotlib>=3.8.1",
    "einops>=0.7.0",
    "transformers-stream-generator>=0.0.4",
    "optimum>=1.16.1",
    "packaging>=23.2",
    "flash-attn>=2.4.2",
    "ninja>=1.11.1.1",
    "setuptools>=69.0.3",
    "jupyterlab>=4.0.10",
    "voicefixer>=0.1.3",
    "speechcolab>=0.0.6a0",
    "encodec>=0.1.1",
    "bark-hubert-quantizer @ git+https://github.com/gitmylo/bark-voice-cloning-HuBERT-quantizer.git",
    "fairseq @ git+https://github.com/One-sixth/fairseq.git",
    "resemble-enhance @ git+https://github.com/Robinysh/resemble-enhance-optimize",
    "soundfile>=0.12.1",
    "lightningtools @ git+https://github.com/flyingmilktea/lightningtools@raydata",
    "ray[data]>=2.9.1",
    "bitsandbytes>=0.42.0",
    "samplerate2>=0.0.2",
    "auto-gptq>=0.6.0",
    "grpcio>=1.62.0",
    "pandas==2.0.3",
    "pyannote-audio>=3.1.1",
    "openai>=1.13.3",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.scripts]
start.env = {HYDRA_FULL_ERROR="1"}
start.env_file=".env"
pdm-autoflake.shell = "git ls-files '*.py' | xargs -t pdm run autoflake --in-place --expand-star-imports --remove-all-unused-imports --ignore-init-module-imports"
pdm-isort.shell = "git ls-files '*.py' | xargs -t pdm run isort -q"
pdm-black.shell = "git ls-files '*.py' | xargs -t pdm run black -q"
lint-format-python.composite = ["pdm-autoflake", "pdm-isort", "pdm-black"]
lint-format-gitignore.shell = "git ls-files '.gitignore' | xargs -tI {} sort -o {} {}"
lint-format-yaml.shell = "git ls-files '*.yml' '*.yaml' | xargs -t yq -i -S -Y -w 10000 ."
lint-format.env = {LC_ALL="C"}
lint-format.composite = ["lint-format-python", "lint-format-gitignore", "lint-format-yaml"]
pdm-flake8.shell = "git ls-files '*.py' | xargs -t pdm run flake8"
pdm-pylint.shell = "git ls-files '*.py' | xargs -t pdm run pylint"
lint.composite = ["pdm-flake8", "pdm-pylint"]
start.shell = "if [ -e .env ]; then pdm run lightning_trainer; else echo 'Make a copy of .env from .env.sample before you start.'; fi"
#data-generate.shell = "if [ -e .env ]; then pdm run python src/speechllm/data_generation/main.py; else echo 'Make a copy of .env from .env.sample before you start.'; fi"
data-generate.env_file=".env"
data-generate.shell = "pdm run python src/speechllm/data_generation/main.py"
pre_install.shell = "export CMAKE_ARGS='-DLLAMA_CUBLAS=on' FORCE_CMAKE=1"

[tool.pdm.options]
sync = ["--no-isolation"]
installsync = ["--no-isolation"]
